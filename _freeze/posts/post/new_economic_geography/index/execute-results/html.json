{
  "hash": "4c58ba55d453e05b8c429a7cdcd26ff4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"New Economic Geography model with R\"\ndescription: |\n  R code to produce the multiple equilibria in a standard new economic geopgraphy model\nauthor: Thomas de Graaff\ndate: '2018-02-04'\nexecute: \n  cache: true\nslug: new-economic-geography-model-with-r\ncategories:\n  - R\n  - Education\n  - Interaction\ntags: []\n---\n\n\n## New economic geography model with R\n\n### Introduction\n\nWhy some regions have more economic activiy than others depend on a variety of factors, including regions' endowments, good policy and just sheer luck (oftentimes called path dependency). In the 1990s Paul Krugman constructed a model, the Core-Periphery model, that was able to model all these three elements. This model received quite some positive criticism (including a Nobel price), but still is rather complex in wielding it. In this post I show how one can actually program and depict the short term and long term equilibria that the model yields. The derived estimations are coming from Henri de Groot.\n\n::: {.column-margin}\nOne of the reason why this model is complex is that it can easility multiple equilibria like the figure below. Our goal in to prodcude the \"Tomahawk\" below.\n\n![Multiple equilibria](featured.png){#fig-tomahawk}\n:::\n\n### The actual code\n\nWe first need to read in some packages that we will use:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n################################################################\n# Read in libraries\n################################################################\n\nlibrary(nleqslv)  # for solving system of nonlinear equations\nlibrary(ggplot2)  # for structurally making plots\nlibrary(ggthemes) # for using economist theme\nlibrary(dplyr)    # for data wrangling\nlibrary(cowplot)  # for combining plots\n```\n:::\n\n\nThen we define some constants. Note that you can change them if you need a different set-up.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n################################################################\n# Define parameters\n################################################################\n\nL       <- 2.0  # Total labor force\nphi1    <- 0.48 # fraction of food works living in region 1\ngam     <- 0.3  # fraction that works in manufacturing\neps     <- 5.0  # elasticity of demand\nrho     <- 0.8  # substitution parameter of variety\nbet     <- 0.8  # variable costs\nalp     <- 0.08 # fixed costs\ndelta   <- 0.4  # budget share manufacturing\n```\n:::\n\n\nMoreover, we need some additional (none structural) constants, needed for the iteration and the granularity of our plots:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n################################################################\n# Define iterations and stepsize for transporation and lambda\n################################################################\n\niter_l <- 999\nstep_l <- 0.001\nstart_l <- 0.001\n\niter_t <- 51\nstart_t <- 1.5\nstep_t <- 0.01\n```\n:::\n\n\nThe model containts 6 non-linear equations, namely:\n\n\\begin{aligned}\nY_1 &= \\phi_1(1-\\gamma)L + \\lambda_1 \\gamma LW_1\\\\\\\\\\\\\nY_2 &= \\phi_2(1-\\gamma)L + (1-\\lambda_1) \\gamma LW_2\\\\\\\\\\\\\nW_1 &= \\rho \\beta^{-\\rho}\\left(\\frac{\\delta}{\\alpha(\\epsilon-1)}\\right)^{1/\\epsilon} \\left(Y_1 I_1^{\\epsilon-1} + T^{1-\\epsilon}Y_2 I_2^{\\epsilon-1}\\right)^{1/\\epsilon}\\\\\\\\\\\\\nW_2 &= \\rho \\beta^{-\\rho}\\left(\\frac{\\delta}{\\alpha(\\epsilon-1)}\\right)^{1/\\epsilon} \\left(T^{1-\\epsilon}Y_1 I_1^{\\epsilon-1} + Y_2 I_2^{\\epsilon-1}\\right)^{1/\\epsilon}\\\\\\\\\\\\\nI_1 &= \\left(\\frac{\\gamma L}{\\alpha \\epsilon} \\right)^{1/(1-\\epsilon)}\\left(\\frac{\\beta}{\\rho}\\right) \\left(\\lambda W_1^{1-\\epsilon} + (1-\\lambda)T^{1-\\epsilon} W_2^{1-\\epsilon}\\right)^{1/(1-\\epsilon)}\\\\\\\\\\\\\nI_2 &= \\left(\\frac{\\gamma L}{\\alpha \\epsilon} \\right)^{1/(1-\\epsilon)}\\left(\\frac{\\beta}{\\rho}\\right) \\left(\\lambda T^{1-\\epsilon} W_1^{1-\\epsilon} + (1-\\lambda) W_2^{1-\\epsilon}\\right)^{1/(1-\\epsilon)}\\\\\\\\\\\\\n\\end{aligned}\n\nThe first two equations denote  total regional income for regional 1 and 2, equation 3 and 4 give the regional wages for both regions and the last two equations determine regional price indices.\n\nThus, the key optimalisation procedure looks as follows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n################################################################\n# Definite optimal function\n################################################################\n\nequilibrium <- function(x){\n\n    Y1 <- x[1]\n    Y2 <- x[2]\n    W1 <- x[3]\n    W2 <- x[4]\n    I1 <- x[5]\n    I2 <- x[6]\n\n    y <- rep(NA, length(x))\n\n    y[1] <- Y1-phi1*(1-gam)*L-lam*gam*L*W1\n    y[2] <- Y2-(1-phi1)*(1-gam)*L-(1-lam)*gam*L*W2\n    y[3] <- W1-rho*bet^(-rho)*(delta/(alp*(eps-1)))^(1/eps)*(Y1*I1^(eps-1)+T^(1-eps)*Y2*I2^(eps-1))^(1/eps)\n    y[4] <- W2-rho*bet^(-rho)*(delta/(alp*(eps-1)))^(1/eps)*(T^(1-eps)*Y1*I1^(eps-1)+Y2*I2^(eps-1))^(1/eps)\n    y[5] <- I1-(gam*L/(alp*eps))^(1/(1-eps))*(bet/rho)*(lam*W1^(1-eps)+(1-lam)*T^(1-eps)*W2^(1-eps))^(1/(1-eps))\n    y[6] <- I2-(gam*L/(alp*eps))^(1/(1-eps))*(bet/rho)*(lam*T^(1-eps)*W1^(1-eps)+(1-lam)*W2^(1-eps))^(1/(1-eps))\n\n    return(y)\n}\n```\n:::\n\n\nAnd finally we need the loop below to create the figures\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n################################################################\n# Create the vector where the output is stored\n# This is faster than using append\n# we will only append the equilibrium dataframe to find the\n# stable and unstable equiliria (do that in the slower (outer)\n# loop)\n################################################################\n\nrel       <- vector(length = iter_l*iter_t)\nlambda    <- vector(length = iter_l*iter_t)\ntransport <- vector(length = iter_l*iter_t)\nwelfare   <- vector(length = iter_l*iter_t)\nw_man_h   <- vector(length = iter_l*iter_t)\nw_man_f   <- vector(length = iter_l*iter_t)\nw_farm_h  <- vector(length = iter_l*iter_t)\nw_farm_f  <- vector(length = iter_l*iter_t)\n\n################################################################\n# Set the double loop for the  optimal solution using the\n# package nleqslv.\n# The fast (inner) loop is over gamma, The slow (outer) loop is\n# over the transportation costs\n################################################################\n\n# Completely parameterized\nloop_transport <- seq( start_t, start_t + iter_t * step_t - step_t, by = step_t)\nloop_gamma <- seq( start_l, start_l + iter_l * step_l - step_l, by = step_l )\nequilibria <- data.frame(T = numeric(0), gamma = numeric(0), stable = numeric(0))\n\n# Create intial starting values\nstart <- c(1,1,1,1,1,1)\n\niteration <- 0 # General counter\nfor (T in loop_transport){\n  iter_eq <- 0 # Counter to find the equilibria for lambda\n  lam_vec <- vector(length = iter_l) # initialize lambda vector\n  t_vec   <- vector(length = iter_l) # initialize transport vector\n  rel_vec <- vector(length = iter_l) # initialize relative real wage diff vector\n  for (lam in loop_gamma){\n    iteration <- iteration + 1\n    iter_eq   <-  iter_eq + 1\n    opt <- nleqslv(start, equilibrium)\n    Y1 <- opt$x[1]\n    Y2 <- opt$x[2]\n    W1 <- opt$x[3]\n    W2 <- opt$x[4]\n    I1 <- opt$x[5]\n    I2 <- opt$x[6]\n\n    # Fill the various vectors\n    rel[iteration]       <- (W1/I1^delta)/(W2/I2^delta)\n    welfare[iteration]   <- Y1/(I1^delta)+Y2/(I2^delta)\n    w_man_h[iteration]   <- W1/I1^delta\n    w_man_f[iteration]   <- W2/I2^delta\n    w_farm_h[iteration]  <- 1/I1^delta\n    w_farm_f[iteration]  <- 1/I2^delta\n    lambda[iteration]    <- lam\n    transport[iteration] <- T\n\n    # Needed to find the equilibria (a bit redundant but more readible so)\n    lam_vec[iter_eq]     <- lam\n    t_vec[iter_eq]       <- T\n    rel_vec[iter_eq]     <- (W1/I1^delta)/(W2/I2^delta)\n  }\n  eq <- data.frame(t_vec, lam_vec, rel_vec)\n  eq <- eq %>%\n    mutate(\n           dpos = ifelse( ( (rel_vec - 1) >= 0 & ( lag(rel_vec) - 1)  < 0), 1, 0 ),\n           dneg = ifelse( ( (rel_vec - 1) <= 0 & ( lag(rel_vec) - 1)  > 0), 1, 0 )\n           )\n  stable <- eq %>%\n    filter(dneg == 1) %>%\n    mutate(stable =1) %>%\n    select(-dpos)\n  unstable <- eq %>%\n    filter(dpos == 1) %>%\n    mutate(stable =0) %>%\n    select(-dneg)\n  if (nrow(stable) > 0 ) {\n      equilibria <- rbind(equilibria, data.frame(stable[1], stable[2], stable[5]))\n      }\n  if (nrow(unstable) > 0) {\n      equilibria <- rbind(equilibria, data.frame(unstable[1], unstable[2], unstable[5]))\n      }\n  if (nrow(unstable) == 1){\n    equilibria <- rbind(equilibria, c(unstable[1,1], 0, 1))\n    equilibria <- rbind(equilibria, c(unstable[1,1], 1, 1))\n  }\n  if ( (nrow(unstable) == 1) & (nrow(stable) == 1) ) {\n    if (stable$lam_vec[1] > unstable$lam_vec[1] ){\n      equilibria <- rbind(equilibria, c(unstable[1,1], 0, 1))\n    }\n    if (stable$lam_vec[1] < unstable$lam_vec[1] ){\n      equilibria <- rbind(equilibria, c(unstable[1,1], 1, 1))\n    }\n  }\n  if ((nrow(unstable) + nrow(stable)) == 3) {\n      equilibria <- rbind(equilibria, c(unstable[1,1], 1, 1))\n      equilibria <- rbind(equilibria, c(unstable[1,1], 0, 1))\n  }\n}\n\n################################################################\n# Create the dataframe called neg_data\n################################################################\n\nneg_data <- data.frame(transport, lambda, rel, welfare,\n                       w_man_h, w_man_f, w_farm_h, w_farm_f)\n\n################################################################\n# For creating the plots\n################################################################\n\n#Indicate which lines should be highlighted\ntop_line <- neg_data[neg_data$transport == \"1.5\", ]\nbottom_line <- neg_data[neg_data$transport == \"2\", ]\nmid_line <- neg_data[neg_data$transport == \"1.75\", ]\n```\n:::\n\n\nSo we can get our wiggle and tomahawk picture we want:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(neg_data) + aes(lambda, rel, group = transport) + geom_line(size = 0.5, colour=\"grey\", alpha = 0.5) +\n  geom_line(data = top_line, aes(x = lambda, y = rel, group = transport, colour = \"steelblue\"), size = 1) +\n  geom_line(data = bottom_line, aes(x = lambda, y = rel, group = transport, colour = \"black\"), size = 1) +\n  geom_line(data = mid_line, aes(x = lambda, y = rel, group = transport, colour = \"red\"), size = 1) +\n  scale_colour_discrete(name = \"Transportation costs\", labels = c(\"High\", \"Medium\", \"Low\")) +\n  geom_hline(yintercept = 1, size = 1, colour = \"red\", linetype = 4) +\n  theme_economist() +\n  labs(title =\"Wiggle diagram\", y = \"Relative real wage\",\n       subtitle = \"Changes in relative real wage with varying lambda and transportation costs\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(equilibria) + aes(t_vec, lam_vec) +\n  geom_point(aes(colour = factor(stable))) +\n  theme_economist() +\n  theme(legend.title=element_blank()) +\n  scale_colour_discrete(breaks = c(\"0\", \"1\"), labels=c(\"Unstable equilibrium\", \"Stable equilibrium\")) +\n  labs(title =\"Tomahawk\", y = \"lambda\", x = \"transportation costs\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}